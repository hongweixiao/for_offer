#[macro_use]
extern crate lazy_static;
extern crate parking_lot;
//extern crate regex;

//mod find_003;
//mod replace_whitespace_004;
//mod print_list_005;
//mod build_binary_tree_006;
//mod two_stack_007;
//mod rotate_array_008;
//mod fibonacci_009;
//mod jump_floor_010;
//mod jump_floorn_011;
//mod rent_cover_012;
//mod number_of1_013;
//mod power_014;
//mod reorder_array_015;
//mod find_kth_to_tail_016;
//mod reverse_list_017;
//mod merge_two_lists_018;
//mod has_sub_tree_019;
//mod mirror_tree_020;
//mod matrix_021;
//mod stack_min_022;
//mod is_pop_order_023;
//mod print_tree_024;
//mod verify_025;
//mod find_path_026;
//mod random_node_clone_027;
//mod convert_028;
//mod permutation_029;
//mod morethan_half_030;
//mod least_numbers_031;
//mod greatest_subcount_032;
//mod numbers_1_n_033;
//mod print_min_number_034;
//mod nth_ugly_number_035;
//mod first_not_repeate_036;
//mod inverse_pairs_037;
//mod first_common_node_038;
//mod getnumberofk_039;
//mod tree_deep_040;
//mod check_balance_041;
//mod num_once_042;
//mod continue_sequence_043;
//mod two_numbers_044;
//mod left_rotate_str_045;
//mod reverse_sentence_046;
//mod puke_continue_047;
//mod last_remaining_048;
//mod calc_sum_049;
//mod add_050;
//mod str_to_int_051;
//mod duplicate_052;
//mod multiply_053;
//mod regular_match_054;
//mod numberic_055;
//mod first_appearin_once_056;
//mod entry_node_057;
//mod delete_dup_node_058;
//mod next_tree_node_059;
//mod symmetric_060;
//mod print_treeii_061;
//mod print_treeiii_062;
//mod serialize_tree_063;
//mod kth_smallest_064;
mod max_sliding_window_065;

fn main() {
	
}
